# planner.py
# ----------------------------------------------------------------------------------
# Query Planner - Central routing logic for DefensaCopilot
# Routes incoming user queries to the most appropriate AI agent
# based on keywords, topics, or semantic hints.
# ----------------------------------------------------------------------------------

from agents.threat_agent import threat_agent
from agents.policy_agent import policy_agent
from agents.disinfo_agent import disinfo_agent
from agents.rag_agent import rag_agent

# === Main dispatcher function ===
async def plan_and_run(query: str) -> str:
    """
    Determines the appropriate agent to handle the given query,
    based on simple keyword matching and routing logic.

    Parameters:
        query (str): The user's input question.

    Returns:
        str: The response generated by the selected agent.
    """

    # Normalize input to lowercase for easier keyword matching
    query_lower = query.lower()

    # Route to misinformation analysis
    if "fake news" in query_lower or "misinformation" in query_lower:
        return await disinfo_agent(query)

    # Route to threat intelligence agent
    elif any(k in query_lower for k in ["troop", "tank", "border", "attack", "surveillance"]):
        return await threat_agent(query)

    # Route to policy/budget analysis
    elif any(k in query_lower for k in ["policy", "defense budget", "spending", "treaty", "military investment"]):
        return await policy_agent(query)

    # Route to real document search via Azure Cognitive Search (RAG)
    elif any(k in query_lower for k in ["report", "intel", "sipri", "eda", "search", "nuclear", "drone"]):
        return await rag_agent(query)

    # Fallback if no route matches
    else:
        return (
            "ðŸ¤” I'm not sure how to answer that. "
            "Please rephrase your question or ask something related to defense policy, threats, or intelligence."
        )
